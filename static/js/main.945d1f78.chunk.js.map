{"version":3,"sources":["App.js","serviceWorker.js","index.js"],"names":["App","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","currentList","handleCard","id","setState","isOpen","modalInfo","modalRender","react_default","a","createElement","Fragment","state","CardHeader_default","title","desc","subheader","codigo","style","backgroundColor","marginTop","background","borderRadius","height","width","ListSubheader_default","renderInfoList","prop","listArr","i","split","length","push","ListItem_default","key","Math","random","divider","trim","charAt","toUpperCase","slice","handleSearch","_ref","asyncToGenerator","regenerator_default","mark","_callee","e","query","filteredList","wrap","_context","prev","next","target","value","RegExp","normalize","Data","filter","obj","test","listLength","stop","_x","apply","arguments","renderRows","_ref2","index","isScrolling","isVisible","className","onClick","paddingTop","lineHeight","button","ListItemText_default","fontWeight","fontSize","padding","marginRight","isInfoOpen","list","React","createRef","_this2","Grid_default","container","direction","alignItems","position","top","display","justifyContent","zIndex","Typography_default","color","AppBar_default","flex","flexDirection","Toolbar_default","variant","disableGutters","flexGrow","transition","justifySelf","Search_default","InputBase_default","fullWidth","paddingLeft","onChange","onFocus","parentElement","animation","document","querySelector","opacity","onBlur","placeholder","Close_default","_ref3","_callee2","_context2","preventDefault","console","log","_x2","cursor","IconButton_default","Info_default","item","List_default","ref","window","innerHeight","rowCount","rowHeight","rowRenderer","innerWidth","overscanColumnCount","Modal_default","open","disableAutoFocus","Card_default","CardContent_default","Grow_default","in","timeout","overflowY","Component","isLocalhost","Boolean","location","hostname","match","registerValidSW","swUrl","config","navigator","serviceWorker","register","then","registration","onupdatefound","installingWorker","installing","onstatechange","controller","onUpdate","onSuccess","catch","error","ReactDOM","render","App_App","getElementById","URL","process","href","origin","addEventListener","concat","fetch","response","contentType","headers","get","status","indexOf","ready","unregister","reload","checkValidServiceWorker"],"mappings":"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","file":"static/js/main.945d1f78.chunk.js","sourcesContent":["/*\nLeaf Ciap (alpha)\nWeb  app para busca de códigos e termos CIAP2 desenvolvido por Leonardo Canela Almeida\n*/\n\n// Importando dependências\nimport React, { Component } from \"react\";\nimport Grid from \"@material-ui/core/Grid\";\nimport AppBar from \"@material-ui/core/AppBar\";\nimport Toolbar from \"@material-ui/core/Toolbar\";\nimport InputBase from \"@material-ui/core/InputBase\";\nimport ListItem from \"@material-ui/core/ListItem\";\nimport ListItemText from \"@material-ui/core/ListItemText\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport Modal from \"@material-ui/core/Modal\";\nimport Grow from \"@material-ui/core/Grow\";\nimport Card from \"@material-ui/core/Card\";\nimport CardHeader from \"@material-ui/core/CardHeader\";\nimport CardContent from \"@material-ui/core/CardContent\";\nimport ListSubheader from \"@material-ui/core/ListSubheader\";\nimport Typography from \"@material-ui/core/Typography\";\nimport SearchIcon from \"@material-ui/icons/Search\";\nimport CloseIcon from \"@material-ui/icons/Close\";\nimport InfoIcon from \"@material-ui/icons/Info\";\nimport List from \"react-virtualized/dist/commonjs/List\";\nimport normalize from \"normalize-text\";\nimport Data from \"./assets/ciap2.min.json\";\nimport \"./App.css\";\n\nexport default class App extends Component {\n  constructor(props) {\n    super(props);\n    this.state = { query: \"\", listLength: Data.length, isOpen: false, isInfoOpen: false };\n    this.list = React.createRef();\n  }\n\n  //Array com a lista d\n  currentList = [];\n  componentWillMount() {\n    this.currentList = Data;\n  }\n\n//abre o cartão de informação de cada CIAP e passa as informações\n  handleCard = id => {\n    this.setState({ isOpen: true, modalInfo: this.currentList[id] });\n    this.modalRender();\n  };\n  modalRender = () => (\n    <React.Fragment>\n      {this.state.modalInfo ? (\n        <CardHeader\n          title={this.state.modalInfo.desc}\n          subheader={this.state.modalInfo.codigo}\n          style={{ backgroundColor: \"#FCD9DF\" }}\n        />\n      ) : null}\n      <div\n        style={{\n          marginTop: \"-14px\",\n          background: \"#fff\",\n          borderRadius: \"12px\",\n          height: \"24px\",\n          width: \"100%\"\n        }}\n      />\n      <div>\n        <ListSubheader>Também pode ser usado para:</ListSubheader>\n        {this.renderInfoList(\"inclusao\")}\n      </div>\n      <ListSubheader>Não deve ser utilizado para:</ListSubheader>\n      {this.renderInfoList(\"exclusao\")}\n      <div />\n    </React.Fragment>\n  );\n  renderInfoList = prop => {\n    let listArr = [];\n    if (this.state.modalInfo) {\n      for (let i = 0; i < this.state.modalInfo[prop].split(\",\").length; i++) {\n        listArr.push(\n          <ListItem key={Math.random() + i} divider>\n            {this.state.modalInfo[prop]\n              .split(\",\")[i].trim()\n              .charAt(0)\n              .toUpperCase() +\n              this.state.modalInfo[prop]\n                .split(\",\")[i].trim()\n                .slice(1)}\n          </ListItem>\n        );\n      }\n    }\n    return listArr;\n  };\n\n  //Filtra o array de CIAPs de acordo com o texto digitado\n  handleSearch = async e => {\n    await this.setState({ query: e.target.value });\n    let query = new RegExp(normalize(this.state.query));\n\n    let filteredList = Data.filter(\n      obj =>\n        query.test(normalize(obj.codigo)) || query.test(normalize(obj.desc))\n    );\n    this.currentList = filteredList;\n    this.setState({ listLength: filteredList.length });\n  };\n\n  renderRows = ({ key, index, isScrolling, isVisible, style }) => {\n    return (\n      <div style={style} className=\"li-container\" key={key}>\n        <ListItem\n          onClick={() => this.handleCard(index)}\n          divider\n          style={{\n            paddingTop: \"30px\",\n            lineHeight: \"40px\",\n            height: \"100%\",\n            width: \"100%\"\n          }}\n          button\n        >\n          <ListItemText>\n            <label\n              style={{\n                fontWeight: \"bold\",\n                fontSize: \"1em\",\n                padding: \"10px\",\n                marginRight: \"10px\",\n                borderRadius: \"10px\",\n                background: \"#effff1\"\n              }}\n            >\n              {this.currentList[index] ? this.currentList[index].codigo : null}\n            </label>\n            <label\n              style={{\n                fontSize: \"1em\"\n              }}\n            >\n              {this.currentList[index] ? this.currentList[index].desc : null}\n            </label>\n          </ListItemText>\n        </ListItem>\n      </div>\n    );\n  };\n\n  render() {\n    return (\n      <Grid container direction=\"column\" alignItems=\"center\">\n        <div\n          className=\"topbar\"\n          style={{\n            background: \"#1CAD73\",\n            width: \"100%\",\n            height: \"18px\",\n            position: \"fixed\",\n            top: 0,\n            display: \"flex\",\n            alignItems: \"center\",\n            justifyContent: \"center\",\n            zIndex: 99\n          }}\n        >\n          <Typography style={{ color: \"#fff\", fontWeight: \"bold\" }}>\n            Leaf Ciap 2.0\n          </Typography>\n        </div>\n        <AppBar\n          style={{\n            flex: 1,\n            top: \"18px\",\n            background: \"#1CAD73\",\n            height: \"40px\",\n            display: \"flex\",\n            alignItems: \"center\",\n            justifyContent: \"flex-start\",\n            flexDirection: \"row\"\n          }}\n          position=\"fixed\"\n          color=\"default\"\n        >\n          <Toolbar\n            className=\"search-toolbar\"\n            variant=\"dense\"\n            style={{\n              display: \"flex\",\n              height: \"40px\",\n              flex: 1,\n              justifyContent: \"center\",\n              flexDirection: \"row\"\n            }}\n            disableGutters\n          >\n\n            <div style={{ flexGrow: 1 }} />\n\n            <div\n              style={{\n                transition: \"all .7s ease-out\",\n                width: \"200px\",\n                borderRadius: \"8px\",\n                padding: \"3px\",\n                background: \"#fafafa\",\n                justifySelf: \"center\",\n                display: \"flex\",\n                alignItems: \"center\",\n                flexDirection: \"row\"\n              }}\n            >\n              <SearchIcon />\n              <InputBase\n                value={this.state.query}\n                className=\"searchInput\"\n                fullWidth\n                style={{ paddingLeft: \"5px\" }}\n                onChange={e => this.handleSearch(e)}\n                onFocus={e => {\n                  e.target.parentElement.parentElement.style.animation =\n                    \"typing .6s forwards cubic-bezier(0.795, 0.120, 0.000, 1.480)\";\n\n                  document.querySelector(\".close-icon\").style.opacity = 0.6;\n                }}\n                onBlur={e => {\n                  e.target.parentElement.parentElement.style.animation =\n                    \"blurSearch .6s forwards ease-in-out\";\n\n                  document.querySelector(\".close-icon\").style.opacity = 0;\n                }}\n                placeholder=\"Search…\"\n              />\n              <CloseIcon\n                onClick={async e => {\n                  e.preventDefault();\n                  await this.setState({ query: \"\" });\n                  console.log(this.state);\n                }}\n                className=\"close-icon\"\n                style={{\n                  width: \"15px\",\n                  height: \"15px\",\n                  cursor: \"pointer\",\n                  marginRight: \"5px\",\n                  backgroundColor: \"white\",\n                  borderRadius: \"50%\",\n                  opacity: 0,\n                  transition: \".5 linear\"\n                }}\n              />\n            </div>\n\n            <div style={{ flexGrow: 1 }} />\n            <IconButton onClick={() => this.setState({isInfoOpen: true})}>\n              <InfoIcon />\n            </IconButton>\n          </Toolbar>\n        </AppBar>\n        <Grid style={{ width: \"100%\" }} item>\n          <List\n            ref={this.list}\n            height={window.innerHeight * 0.9}\n            rowCount={this.state.listLength}\n            rowHeight={80}\n            rowRenderer={this.renderRows}\n            width={window.innerWidth}\n            overscanColumnCount={10}\n            className=\"list-container\"\n          />\n        </Grid>\n<Modal open={this.state.isInfoOpen} disableAutoFocus style={{\n            display: \"flex\",\n            justifyContent: \"center\",\n            alignItems: \"center\"\n          }}>\n           <Card\n              onClick={() => this.setState({ isInfoOpen: false })}\n              style={{\n                borderRadius: \"8px\",\n                width: \"370px\",\n                height: \"45%\",\n                background: \"#fff\",\n                display: 'flex',\n                alignItems: 'center',\n                justifyContent: 'center'\n\n              }}\n            >\n            <CardContent>\n              Web App desenvolvido por Leonardo Canela Almeida.\n            </CardContent>\n            </Card>\n          </Modal>\n        <Modal\n          disableAutoFocus\n          onClick={() => this.setState({ isOpen: false })}\n          open={this.state.isOpen}\n          style={{\n            display: \"flex\",\n            justifyContent: \"center\",\n            alignItems: \"center\"\n          }}\n        >\n          <Grow in={this.state.isOpen} timeout={500}>\n            <Card\n              style={{\n                overflowY: \"scroll\",\n                borderRadius: \"11px\",\n                width: \"375px\",\n                height: \"82%\",\n                background: \"#fff\"\n              }}\n            >\n              <div>{this.modalRender()}</div>\n            </Card>\n          </Grow>\n        </Modal>\n      </Grid>\n    );\n  }\n}\n\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nReactDOM.render(<App />, document.getElementById('root'));\nserviceWorker.register();\n"],"sourceRoot":""}